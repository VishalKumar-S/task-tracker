name: Scala CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    name: ${{ matrix.service.name }} CI
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Don't cancel other jobs if one fails
      matrix:
        # Define the services to run the build steps for.
        service:
          - { name: "notification-service", dir: "notification-service" }
          - { name: "tasks-service", dir: "tasks-service" }

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'sbt'

      # Use the official action to install sbt - faster and more reliable
      - name: Setup sbt
        uses: sbt-actions/setup-sbt@v1

      # This step is the key to solving your dependency issue.
      # It builds the 'notification-proto' project and publishes it to the local
      # Ivy cache on the CI runner, making it available to other modules.
      - name: Build and Publish Shared Proto
        run: sbt notification-proto/publishLocal

      # --- Per-Service Steps ---

      - name: Check code formatting
        working-directory: ./${{ matrix.service.dir }}
        run: sbt scalafmtCheckAll scalafmtSbtCheck

      - name: Compile code
        working-directory: ./${{ matrix.service.dir }}
        run: sbt compile Test/compile

      - name: Run tests with coverage
        working-directory: ./${{ matrix.service.dir }}
        run: sbt coverage test coverageReport

      - name: Upload coverage report
        uses: codecov/codecov-action@v4
        with:
          files: ./${{ matrix.service.dir }}/target/scala-2.13/scoverage-report/scoverage.xml
          flags: ${{ matrix.service.name }}
          fail_ci_if_error: false

      - name: Run static analysis
        working-directory: ./${{ matrix.service.dir }}
        run: sbt scapegoat
        continue-on-error: true

      - name: Archive static analysis report
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.service.name }}-scapegoat-report
          path: ./${{ matrix.service.dir }}/target/scala-2.13/scapegoat-report/
